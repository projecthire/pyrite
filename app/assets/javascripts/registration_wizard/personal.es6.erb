$(document).on('ready', function()
{
  $('.registration_wizard form.new_candidate')
    .formValidation({
      framework: 'bootstrap',
      trigger: 'blur',
      fields: {
        'candidate[name]': {
          validators: {
            notEmpty: {
              message: 'Name is required.'
            }
          }
        },
        'candidate[email]': {
          validators: {
            notEmpty: {
              message: 'Email is required.'
            },
            emailAddress: {
              message: 'Please enter a valid email address.'
            },
            remote: {
              message: 'This email address has already been registered.',
              threshold: 4,
              url: '/candidates/email_valid',
              type: 'GET'
            }
          }
        }
      }
    })
    .on('err.validator.fv', function(e, data)
    {
      // $(e.target)    --> The field element
      // data.fv        --> The FormValidation instance
      // data.field     --> The field name
      // data.element   --> The field element
      // data.validator --> The current validator name

      data.element
        .data('fv.messages')
        // Hide all the messages
        .find('.help-block[data-fv-for="' + data.field + '"]').hide()
        // Show only message associated with current validator
        .filter('[data-fv-validator="' + data.validator + '"]').show();
    })
    .on('success.form.fv', function(e)
    {
      // the form is valid
      var $form = $(e.target);
      if ($form.data('remote')) {
        e.preventDefault();
        return false;
      }
    })
    .on('submit', function(e)
    {
      var $form = $(e.target);
      if ($form.data('remote')) {
        var numInvalidFields = $form.data('formValidation').getInvalidFields().length;
        if (numInvalidFields) {
          e.preventDefault();
          return false;
        }
      }
    });
});
